env:
  global:
    - CC_TEST_REPORTER_ID=a2c04c8e76935f673eb91042f9a19d37d03bc74940956beec70b7d9386cb43f1
sudo: false
language: node_js
os:
  - linux
  - osx
 # - windows
cache:
  npm
node_js:
  - "6"
  - "8"
  - "10"
before_install:
  -  openssl aes-256-cbc -K $encrypted_13687a44e26f_key -iv $encrypted_13687a44e26f_iv -in GCS\ keyfile.json.enc -out GCS\ keyfile.json -d
install:
  - npm install
script:
  - npm run test
  - npm run coverage
  - >-  
      eval
      "if [[ \"$TRAVIS_TEST_RESULT\" == 0 ]]; then
      npm install @google-cloud/storage;
      node -e \"
      var config = { projectId: 'deft-condition-224715', keyFilename: 'GCS keyfile.json' };
      var storageModule = require('@google-cloud/storage');
      var storage = new storageModule.Storage(config);
      storage.bucket('node-doxygen_coverage_reports').upload('coverage/lcov.info',
      { destination: '$TRAVIS_BUILD_NUMBER/lcov.$TRAVIS_JOB_NUMBER.info', gzip: true }).then( 
      function(){console.log('File Uploaded')},
      function (error) {console.log ('Upload failed: ' + error)});\";
      fi"
    
jobs:
   include:
    - stage: upload test results
      before_install:
        - openssl aes-256-cbc -K $encrypted_13687a44e26f_key -iv $encrypted_13687a44e26f_iv -in GCS\ keyfile.json.enc -out GCS\ keyfile.json -d
        - curl -L https://codeclimate.com/downloads/test-reporter/test-reporter-latest-linux-amd64 > ./cc-test-reporter
        - chmod +x ./cc-test-reporter
      node_js: 10
      script:
        - mkdir coverageResults
        - npm install @google-cloud/storage
        - >-
          eval
          "node -e \"
          var config = { projectId: 'deft-condition-224715', keyFilename: 'GCS keyfile.json' };
          var storageModule = require('@google-cloud/storage');
          var storage = new storageModule.Storage(config);
          var prefix = '$TRAVIS_BUILD_NUMBER/';
          var bucketName = 'node-doxygen_coverage_reports';
          var options = {prefix: prefix, delimiter: '/'};
          var downloadFiles = new Promise(function (resolve, reject) {
              storage.bucket(bucketName).getFiles(options).then(
                  function (files) {
                      var filesDownloaded = 0;
                      var filesFailed = 0;
                      files[0].forEach(file => {
                          var fileName = 'coverageResults/' + file.name.substring(prefix.length);
                          var options = { destination: fileName };
                          var checkEnd = function () {
                              if (filesFailed > 0 && filesFailed + filesDownloaded == files.length){
                                  reject(filesFailed + ' files failed to download');
                              } else if (filesDownloaded == files.length){
                                  resolve();
                              }
                          };
                          storage.bucket(bucketName)
                              .file(file.name)
                              .download(options)
                              .then(function () {
                                  filesDownloaded++;
                                  checkEnd();
                              },
                              function (error) {
                                  filesFailed ++;
                                  checkEnd();
                              })
                      });
                  },
                  function (error) {
                      reject(error);
                  });
          }
          );
          downloadFiles.then(function () {
              console.log('Download suceeded');
          }, function (error) {
              console.log('Download failed: ' + error);
          })
          \""
        - ls coverageResults
        - ls
        - >- 
          for fn in 'ls coverageResults'; do
              ./cc-test-reporter format-coverage -t lcov -o codeclimate.$fn.json coverageResults/$fn
          done # for each codecoverage report, format it
        - ./cc-test-reporter sum-coverage codeclimate.*.json         # Sum all coverage parts into coverage/codeclimate.json
        - ./cc-test-reporter upload-coverage                         # Upload coverage/codeclimate.json
git:
  depth: 10